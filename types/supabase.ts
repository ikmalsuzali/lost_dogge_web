/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/animal_types": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.animal_types.id"];
          created_at?: parameters["rowFilter.animal_types.created_at"];
          name?: parameters["rowFilter.animal_types.name"];
          description?: parameters["rowFilter.animal_types.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["animal_types"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** animal_types */
          animal_types?: definitions["animal_types"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.animal_types.id"];
          created_at?: parameters["rowFilter.animal_types.created_at"];
          name?: parameters["rowFilter.animal_types.name"];
          description?: parameters["rowFilter.animal_types.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.animal_types.id"];
          created_at?: parameters["rowFilter.animal_types.created_at"];
          name?: parameters["rowFilter.animal_types.name"];
          description?: parameters["rowFilter.animal_types.description"];
        };
        body: {
          /** animal_types */
          animal_types?: definitions["animal_types"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/subscription_plans": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscription_plans.id"];
          created_at?: parameters["rowFilter.subscription_plans.created_at"];
          name?: parameters["rowFilter.subscription_plans.name"];
          price?: parameters["rowFilter.subscription_plans.price"];
          is_recurring?: parameters["rowFilter.subscription_plans.is_recurring"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["subscription_plans"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** subscription_plans */
          subscription_plans?: definitions["subscription_plans"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscription_plans.id"];
          created_at?: parameters["rowFilter.subscription_plans.created_at"];
          name?: parameters["rowFilter.subscription_plans.name"];
          price?: parameters["rowFilter.subscription_plans.price"];
          is_recurring?: parameters["rowFilter.subscription_plans.is_recurring"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscription_plans.id"];
          created_at?: parameters["rowFilter.subscription_plans.created_at"];
          name?: parameters["rowFilter.subscription_plans.name"];
          price?: parameters["rowFilter.subscription_plans.price"];
          is_recurring?: parameters["rowFilter.subscription_plans.is_recurring"];
        };
        body: {
          /** subscription_plans */
          subscription_plans?: definitions["subscription_plans"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/pet_subscriptions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pet_subscriptions.id"];
          created_at?: parameters["rowFilter.pet_subscriptions.created_at"];
          name?: parameters["rowFilter.pet_subscriptions.name"];
          stripe_status?: parameters["rowFilter.pet_subscriptions.stripe_status"];
          stripe_plan_id?: parameters["rowFilter.pet_subscriptions.stripe_plan_id"];
          quantity?: parameters["rowFilter.pet_subscriptions.quantity"];
          trial_ends_at?: parameters["rowFilter.pet_subscriptions.trial_ends_at"];
          ends_at?: parameters["rowFilter.pet_subscriptions.ends_at"];
          pet_id?: parameters["rowFilter.pet_subscriptions.pet_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["pet_subscriptions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** pet_subscriptions */
          pet_subscriptions?: definitions["pet_subscriptions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pet_subscriptions.id"];
          created_at?: parameters["rowFilter.pet_subscriptions.created_at"];
          name?: parameters["rowFilter.pet_subscriptions.name"];
          stripe_status?: parameters["rowFilter.pet_subscriptions.stripe_status"];
          stripe_plan_id?: parameters["rowFilter.pet_subscriptions.stripe_plan_id"];
          quantity?: parameters["rowFilter.pet_subscriptions.quantity"];
          trial_ends_at?: parameters["rowFilter.pet_subscriptions.trial_ends_at"];
          ends_at?: parameters["rowFilter.pet_subscriptions.ends_at"];
          pet_id?: parameters["rowFilter.pet_subscriptions.pet_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pet_subscriptions.id"];
          created_at?: parameters["rowFilter.pet_subscriptions.created_at"];
          name?: parameters["rowFilter.pet_subscriptions.name"];
          stripe_status?: parameters["rowFilter.pet_subscriptions.stripe_status"];
          stripe_plan_id?: parameters["rowFilter.pet_subscriptions.stripe_plan_id"];
          quantity?: parameters["rowFilter.pet_subscriptions.quantity"];
          trial_ends_at?: parameters["rowFilter.pet_subscriptions.trial_ends_at"];
          ends_at?: parameters["rowFilter.pet_subscriptions.ends_at"];
          pet_id?: parameters["rowFilter.pet_subscriptions.pet_id"];
        };
        body: {
          /** pet_subscriptions */
          pet_subscriptions?: definitions["pet_subscriptions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/animal_breeds": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.animal_breeds.id"];
          created_at?: parameters["rowFilter.animal_breeds.created_at"];
          name?: parameters["rowFilter.animal_breeds.name"];
          description?: parameters["rowFilter.animal_breeds.description"];
          animal_type_id?: parameters["rowFilter.animal_breeds.animal_type_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["animal_breeds"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** animal_breeds */
          animal_breeds?: definitions["animal_breeds"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.animal_breeds.id"];
          created_at?: parameters["rowFilter.animal_breeds.created_at"];
          name?: parameters["rowFilter.animal_breeds.name"];
          description?: parameters["rowFilter.animal_breeds.description"];
          animal_type_id?: parameters["rowFilter.animal_breeds.animal_type_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.animal_breeds.id"];
          created_at?: parameters["rowFilter.animal_breeds.created_at"];
          name?: parameters["rowFilter.animal_breeds.name"];
          description?: parameters["rowFilter.animal_breeds.description"];
          animal_type_id?: parameters["rowFilter.animal_breeds.animal_type_id"];
        };
        body: {
          /** animal_breeds */
          animal_breeds?: definitions["animal_breeds"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name?: parameters["rowFilter.users.last_name"];
          type?: parameters["rowFilter.users.type"];
          created_at?: parameters["rowFilter.users.created_at"];
          call_phone_number?: parameters["rowFilter.users.call_phone_number"];
          default_measurement?: parameters["rowFilter.users.default_measurement"];
          about_me?: parameters["rowFilter.users.about_me"];
          email?: parameters["rowFilter.users.email"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name?: parameters["rowFilter.users.last_name"];
          type?: parameters["rowFilter.users.type"];
          created_at?: parameters["rowFilter.users.created_at"];
          call_phone_number?: parameters["rowFilter.users.call_phone_number"];
          default_measurement?: parameters["rowFilter.users.default_measurement"];
          about_me?: parameters["rowFilter.users.about_me"];
          email?: parameters["rowFilter.users.email"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          first_name?: parameters["rowFilter.users.first_name"];
          last_name?: parameters["rowFilter.users.last_name"];
          type?: parameters["rowFilter.users.type"];
          created_at?: parameters["rowFilter.users.created_at"];
          call_phone_number?: parameters["rowFilter.users.call_phone_number"];
          default_measurement?: parameters["rowFilter.users.default_measurement"];
          about_me?: parameters["rowFilter.users.about_me"];
          email?: parameters["rowFilter.users.email"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/pet_images": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pet_images.id"];
          created_at?: parameters["rowFilter.pet_images.created_at"];
          pet_id?: parameters["rowFilter.pet_images.pet_id"];
          url?: parameters["rowFilter.pet_images.url"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["pet_images"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** pet_images */
          pet_images?: definitions["pet_images"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pet_images.id"];
          created_at?: parameters["rowFilter.pet_images.created_at"];
          pet_id?: parameters["rowFilter.pet_images.pet_id"];
          url?: parameters["rowFilter.pet_images.url"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pet_images.id"];
          created_at?: parameters["rowFilter.pet_images.created_at"];
          pet_id?: parameters["rowFilter.pet_images.pet_id"];
          url?: parameters["rowFilter.pet_images.url"];
        };
        body: {
          /** pet_images */
          pet_images?: definitions["pet_images"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/pet_match_images": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pet_match_images.id"];
          match_percentage?: parameters["rowFilter.pet_match_images.match_percentage"];
          created_at?: parameters["rowFilter.pet_match_images.created_at"];
          pet_id?: parameters["rowFilter.pet_match_images.pet_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["pet_match_images"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** pet_match_images */
          pet_match_images?: definitions["pet_match_images"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pet_match_images.id"];
          match_percentage?: parameters["rowFilter.pet_match_images.match_percentage"];
          created_at?: parameters["rowFilter.pet_match_images.created_at"];
          pet_id?: parameters["rowFilter.pet_match_images.pet_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pet_match_images.id"];
          match_percentage?: parameters["rowFilter.pet_match_images.match_percentage"];
          created_at?: parameters["rowFilter.pet_match_images.created_at"];
          pet_id?: parameters["rowFilter.pet_match_images.pet_id"];
        };
        body: {
          /** pet_match_images */
          pet_match_images?: definitions["pet_match_images"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/pets": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pets.id"];
          created_at?: parameters["rowFilter.pets.created_at"];
          name?: parameters["rowFilter.pets.name"];
          description?: parameters["rowFilter.pets.description"];
          weight?: parameters["rowFilter.pets.weight"];
          height?: parameters["rowFilter.pets.height"];
          gender?: parameters["rowFilter.pets.gender"];
          breed_id?: parameters["rowFilter.pets.breed_id"];
          is_vaccinated?: parameters["rowFilter.pets.is_vaccinated"];
          status?: parameters["rowFilter.pets.status"];
          contact_number?: parameters["rowFilter.pets.contact_number"];
          email?: parameters["rowFilter.pets.email"];
          instagram?: parameters["rowFilter.pets.instagram"];
          facebook?: parameters["rowFilter.pets.facebook"];
          twitter?: parameters["rowFilter.pets.twitter"];
          is_deleted?: parameters["rowFilter.pets.is_deleted"];
          user_id?: parameters["rowFilter.pets.user_id"];
          lost_date?: parameters["rowFilter.pets.lost_date"];
          found_date?: parameters["rowFilter.pets.found_date"];
          longitude?: parameters["rowFilter.pets.longitude"];
          latitude?: parameters["rowFilter.pets.latitude"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["pets"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** pets */
          pets?: definitions["pets"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pets.id"];
          created_at?: parameters["rowFilter.pets.created_at"];
          name?: parameters["rowFilter.pets.name"];
          description?: parameters["rowFilter.pets.description"];
          weight?: parameters["rowFilter.pets.weight"];
          height?: parameters["rowFilter.pets.height"];
          gender?: parameters["rowFilter.pets.gender"];
          breed_id?: parameters["rowFilter.pets.breed_id"];
          is_vaccinated?: parameters["rowFilter.pets.is_vaccinated"];
          status?: parameters["rowFilter.pets.status"];
          contact_number?: parameters["rowFilter.pets.contact_number"];
          email?: parameters["rowFilter.pets.email"];
          instagram?: parameters["rowFilter.pets.instagram"];
          facebook?: parameters["rowFilter.pets.facebook"];
          twitter?: parameters["rowFilter.pets.twitter"];
          is_deleted?: parameters["rowFilter.pets.is_deleted"];
          user_id?: parameters["rowFilter.pets.user_id"];
          lost_date?: parameters["rowFilter.pets.lost_date"];
          found_date?: parameters["rowFilter.pets.found_date"];
          longitude?: parameters["rowFilter.pets.longitude"];
          latitude?: parameters["rowFilter.pets.latitude"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pets.id"];
          created_at?: parameters["rowFilter.pets.created_at"];
          name?: parameters["rowFilter.pets.name"];
          description?: parameters["rowFilter.pets.description"];
          weight?: parameters["rowFilter.pets.weight"];
          height?: parameters["rowFilter.pets.height"];
          gender?: parameters["rowFilter.pets.gender"];
          breed_id?: parameters["rowFilter.pets.breed_id"];
          is_vaccinated?: parameters["rowFilter.pets.is_vaccinated"];
          status?: parameters["rowFilter.pets.status"];
          contact_number?: parameters["rowFilter.pets.contact_number"];
          email?: parameters["rowFilter.pets.email"];
          instagram?: parameters["rowFilter.pets.instagram"];
          facebook?: parameters["rowFilter.pets.facebook"];
          twitter?: parameters["rowFilter.pets.twitter"];
          is_deleted?: parameters["rowFilter.pets.is_deleted"];
          user_id?: parameters["rowFilter.pets.user_id"];
          lost_date?: parameters["rowFilter.pets.lost_date"];
          found_date?: parameters["rowFilter.pets.found_date"];
          longitude?: parameters["rowFilter.pets.longitude"];
          latitude?: parameters["rowFilter.pets.latitude"];
        };
        body: {
          /** pets */
          pets?: definitions["pets"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/customers": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          card_brand?: parameters["rowFilter.customers.card_brand"];
          card_last_four?: parameters["rowFilter.customers.card_last_four"];
          trial_ends_at?: parameters["rowFilter.customers.trial_ends_at"];
          user_id?: parameters["rowFilter.customers.user_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["customers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          card_brand?: parameters["rowFilter.customers.card_brand"];
          card_last_four?: parameters["rowFilter.customers.card_last_four"];
          trial_ends_at?: parameters["rowFilter.customers.trial_ends_at"];
          user_id?: parameters["rowFilter.customers.user_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          card_brand?: parameters["rowFilter.customers.card_brand"];
          card_last_four?: parameters["rowFilter.customers.card_last_four"];
          trial_ends_at?: parameters["rowFilter.customers.trial_ends_at"];
          user_id?: parameters["rowFilter.customers.user_id"];
        };
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/lost_meta": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.lost_meta.id"];
          pet_id?: parameters["rowFilter.lost_meta.pet_id"];
          created_at?: parameters["rowFilter.lost_meta.created_at"];
          lost_date?: parameters["rowFilter.lost_meta.lost_date"];
          found_date?: parameters["rowFilter.lost_meta.found_date"];
          longitude?: parameters["rowFilter.lost_meta.longitude"];
          latitude?: parameters["rowFilter.lost_meta.latitude"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["lost_meta"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** lost_meta */
          lost_meta?: definitions["lost_meta"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.lost_meta.id"];
          pet_id?: parameters["rowFilter.lost_meta.pet_id"];
          created_at?: parameters["rowFilter.lost_meta.created_at"];
          lost_date?: parameters["rowFilter.lost_meta.lost_date"];
          found_date?: parameters["rowFilter.lost_meta.found_date"];
          longitude?: parameters["rowFilter.lost_meta.longitude"];
          latitude?: parameters["rowFilter.lost_meta.latitude"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.lost_meta.id"];
          pet_id?: parameters["rowFilter.lost_meta.pet_id"];
          created_at?: parameters["rowFilter.lost_meta.created_at"];
          lost_date?: parameters["rowFilter.lost_meta.lost_date"];
          found_date?: parameters["rowFilter.lost_meta.found_date"];
          longitude?: parameters["rowFilter.lost_meta.longitude"];
          latitude?: parameters["rowFilter.lost_meta.latitude"];
        };
        body: {
          /** lost_meta */
          lost_meta?: definitions["lost_meta"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  animal_types: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    description?: string;
  };
  subscription_plans: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
    /** Format: real */
    price?: number;
    /**
     * Format: boolean
     * @default false
     */
    is_recurring?: boolean;
  };
  pet_subscriptions: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    stripe_status?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `subscription_plans.id`.<fk table='subscription_plans' column='id'/>
     */
    stripe_plan_id?: number;
    /** Format: smallint */
    quantity?: number;
    /** Format: timestamp with time zone */
    trial_ends_at?: string;
    /** Format: timestamp with time zone */
    ends_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `pets.id`.<fk table='pets' column='id'/>
     */
    pet_id?: string;
  };
  animal_breeds: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    description?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `animal_types.id`.<fk table='animal_types' column='id'/>
     */
    animal_type_id?: number;
  };
  users: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /** Format: character varying */
    first_name?: string;
    /** Format: character varying */
    last_name?: string;
    /** Format: integer */
    type?: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    call_phone_number?: string;
    /** Format: boolean */
    default_measurement?: boolean;
    /** Format: character varying */
    about_me?: string;
    /** Format: character varying */
    email?: string;
  };
  pet_images: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `pets.id`.<fk table='pets' column='id'/>
     */
    pet_id?: string;
    /** Format: character varying */
    url?: string;
  };
  pet_match_images: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: real */
    match_percentage?: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `pets.id`.<fk table='pets' column='id'/>
     */
    pet_id?: string;
  };
  pets: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    description?: string;
    /** Format: smallint */
    weight?: number;
    /** Format: smallint */
    height?: number;
    /** Format: boolean */
    gender?: boolean;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `animal_breeds.id`.<fk table='animal_breeds' column='id'/>
     */
    breed_id?: number;
    /** Format: boolean */
    is_vaccinated?: boolean;
    /** Format: smallint */
    status?: number;
    /** Format: character varying */
    contact_number?: string;
    /** Format: character varying */
    email?: string;
    /** Format: character varying */
    instagram?: string;
    /** Format: character varying */
    facebook?: string;
    /** Format: character varying */
    twitter?: string;
    /** Format: boolean */
    is_deleted?: boolean;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id?: string;
    /** Format: timestamp without time zone */
    lost_date?: string;
    /** Format: timestamp without time zone */
    found_date?: string;
    /** Format: double precision */
    longitude?: number;
    /** Format: double precision */
    latitude?: number;
  };
  customers: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    card_brand?: string;
    /** Format: smallint */
    card_last_four?: number;
    /** Format: timestamp with time zone */
    trial_ends_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id?: string;
  };
  lost_meta: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `pets.id`.<fk table='pets' column='id'/>
     */
    pet_id?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: timestamp with time zone */
    lost_date?: string;
    /** Format: timestamp with time zone */
    found_date?: string;
    /** Format: double precision */
    longitude?: number;
    /** Format: double precision */
    latitude?: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description animal_types */
  "body.animal_types": definitions["animal_types"];
  /** Format: bigint */
  "rowFilter.animal_types.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.animal_types.created_at": string;
  /** Format: character varying */
  "rowFilter.animal_types.name": string;
  /** Format: character varying */
  "rowFilter.animal_types.description": string;
  /** @description subscription_plans */
  "body.subscription_plans": definitions["subscription_plans"];
  /** Format: bigint */
  "rowFilter.subscription_plans.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.subscription_plans.created_at": string;
  /** Format: character varying */
  "rowFilter.subscription_plans.name": string;
  /** Format: real */
  "rowFilter.subscription_plans.price": string;
  /** Format: boolean */
  "rowFilter.subscription_plans.is_recurring": string;
  /** @description pet_subscriptions */
  "body.pet_subscriptions": definitions["pet_subscriptions"];
  /** Format: bigint */
  "rowFilter.pet_subscriptions.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.pet_subscriptions.created_at": string;
  /** Format: character varying */
  "rowFilter.pet_subscriptions.name": string;
  /** Format: character varying */
  "rowFilter.pet_subscriptions.stripe_status": string;
  /** Format: bigint */
  "rowFilter.pet_subscriptions.stripe_plan_id": string;
  /** Format: smallint */
  "rowFilter.pet_subscriptions.quantity": string;
  /** Format: timestamp with time zone */
  "rowFilter.pet_subscriptions.trial_ends_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.pet_subscriptions.ends_at": string;
  /** Format: uuid */
  "rowFilter.pet_subscriptions.pet_id": string;
  /** @description animal_breeds */
  "body.animal_breeds": definitions["animal_breeds"];
  /** Format: bigint */
  "rowFilter.animal_breeds.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.animal_breeds.created_at": string;
  /** Format: character varying */
  "rowFilter.animal_breeds.name": string;
  /** Format: character varying */
  "rowFilter.animal_breeds.description": string;
  /** Format: bigint */
  "rowFilter.animal_breeds.animal_type_id": string;
  /** @description users */
  "body.users": definitions["users"];
  /** Format: uuid */
  "rowFilter.users.id": string;
  /** Format: character varying */
  "rowFilter.users.first_name": string;
  /** Format: character varying */
  "rowFilter.users.last_name": string;
  /** Format: integer */
  "rowFilter.users.type": string;
  /** Format: timestamp with time zone */
  "rowFilter.users.created_at": string;
  /** Format: character varying */
  "rowFilter.users.call_phone_number": string;
  /** Format: boolean */
  "rowFilter.users.default_measurement": string;
  /** Format: character varying */
  "rowFilter.users.about_me": string;
  /** Format: character varying */
  "rowFilter.users.email": string;
  /** @description pet_images */
  "body.pet_images": definitions["pet_images"];
  /** Format: bigint */
  "rowFilter.pet_images.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.pet_images.created_at": string;
  /** Format: uuid */
  "rowFilter.pet_images.pet_id": string;
  /** Format: character varying */
  "rowFilter.pet_images.url": string;
  /** @description pet_match_images */
  "body.pet_match_images": definitions["pet_match_images"];
  /** Format: bigint */
  "rowFilter.pet_match_images.id": string;
  /** Format: real */
  "rowFilter.pet_match_images.match_percentage": string;
  /** Format: timestamp with time zone */
  "rowFilter.pet_match_images.created_at": string;
  /** Format: uuid */
  "rowFilter.pet_match_images.pet_id": string;
  /** @description pets */
  "body.pets": definitions["pets"];
  /** Format: uuid */
  "rowFilter.pets.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.pets.created_at": string;
  /** Format: character varying */
  "rowFilter.pets.name": string;
  /** Format: character varying */
  "rowFilter.pets.description": string;
  /** Format: smallint */
  "rowFilter.pets.weight": string;
  /** Format: smallint */
  "rowFilter.pets.height": string;
  /** Format: boolean */
  "rowFilter.pets.gender": string;
  /** Format: bigint */
  "rowFilter.pets.breed_id": string;
  /** Format: boolean */
  "rowFilter.pets.is_vaccinated": string;
  /** Format: smallint */
  "rowFilter.pets.status": string;
  /** Format: character varying */
  "rowFilter.pets.contact_number": string;
  /** Format: character varying */
  "rowFilter.pets.email": string;
  /** Format: character varying */
  "rowFilter.pets.instagram": string;
  /** Format: character varying */
  "rowFilter.pets.facebook": string;
  /** Format: character varying */
  "rowFilter.pets.twitter": string;
  /** Format: boolean */
  "rowFilter.pets.is_deleted": string;
  /** Format: uuid */
  "rowFilter.pets.user_id": string;
  /** Format: timestamp without time zone */
  "rowFilter.pets.lost_date": string;
  /** Format: timestamp without time zone */
  "rowFilter.pets.found_date": string;
  /** Format: double precision */
  "rowFilter.pets.longitude": string;
  /** Format: double precision */
  "rowFilter.pets.latitude": string;
  /** @description customers */
  "body.customers": definitions["customers"];
  /** Format: bigint */
  "rowFilter.customers.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.customers.created_at": string;
  /** Format: character varying */
  "rowFilter.customers.card_brand": string;
  /** Format: smallint */
  "rowFilter.customers.card_last_four": string;
  /** Format: timestamp with time zone */
  "rowFilter.customers.trial_ends_at": string;
  /** Format: uuid */
  "rowFilter.customers.user_id": string;
  /** @description lost_meta */
  "body.lost_meta": definitions["lost_meta"];
  /** Format: bigint */
  "rowFilter.lost_meta.id": string;
  /** Format: uuid */
  "rowFilter.lost_meta.pet_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.lost_meta.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.lost_meta.lost_date": string;
  /** Format: timestamp with time zone */
  "rowFilter.lost_meta.found_date": string;
  /** Format: double precision */
  "rowFilter.lost_meta.longitude": string;
  /** Format: double precision */
  "rowFilter.lost_meta.latitude": string;
}

export interface operations {}

export interface external {}
